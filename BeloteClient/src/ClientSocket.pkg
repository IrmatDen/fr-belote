class ConnectionStatusEventArgs : public CEGUI::EventArgs
{
public:
	enum ConnectionStatus
	{
		CS_Connected,
		CS_Disconnected,
		CS_LobbyFull
	};

	ConnectionStatus	m_ConnectionStatus;
};

class PlayerConnectedEventArgs : public CEGUI::EventArgs
{
public:
	bool		m_Connected;
	std::string	m_PlayerName;
};

class TextBroadcastedEventArgs : public CEGUI::EventArgs
{
public:
	std::string	m_Teller,
				m_Message;
};

class SystemMessageBroadcastedEventArgs : public CEGUI::EventArgs
{
public:
	std::string	m_Message;
};

class CurrentPositioningArgs : public CEGUI::EventArgs
{
public:
	std::string		m_Pos[4];
};

class PlayerDealingArgs : public CEGUI::EventArgs
{
public:
	std::string	m_Who;
};

class PlayerRefusedAssetArgs : public CEGUI::EventArgs
{
public:
	std::string		m_ByPlayer;
};

class PlayerAcceptedAssetArgs : public CEGUI::EventArgs
{
public:
	std::string		m_Asset,
					m_ByPlayer;
};

class CurrentCardsInHandArgs : public CEGUI::EventArgs
{
public:
	std::string		m_Cards[8];
};

class PotentialAssetArgs : public CEGUI::EventArgs
{
public:
	std::string		m_Card;
};

class WaitingPlayArgs : public CEGUI::EventArgs
{
public:
	std::string		m_PossibleCards[8];
};

class PlayedCardArgs : public CEGUI::EventArgs
{
public:
	std::string		m_Card;
	int				m_Player;
};

class CurrentScoresArgs : public CEGUI::EventArgs
{
public:
	int		m_NorthSouthScore,
			m_WestEastScore;
	bool	m_PlayedLastTurn;
};

class ClientSocket : public CEGUI::EventSet
{
public:
	void	Connect(const std::string &hostIP, const std::string &utf8EncodedName);
	void	Disconnect();

	void	SendChatMessage(const std::string &utf8EncodedMessage);

	void	ChoosePosition(const std::string &posName);
	void	StartGame();
	void	AcceptAsset(const std::string &assetColour);
	void	RefuseAsset();
	void	PlayCard(const std::string &cardName);
};
